name: publish
on:
  workflow_dispatch:
  schedule:
  - cron: "0 16 17 * *"

jobs:
  publish:
    runs-on: windows-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Prepare workspace
        run: |
          tree
          cd ci-helpers
          ./run_publish.ps1
          cd ../
          tree
          dir texlive\tools

      - name: Check for modified files
        shell: bash
        id: git-check
        run: |
          git status
          echo ::set-output name=modified::$(if git diff-index --quiet HEAD --; then echo "false"; else echo "true"; fi)
          echo ::set-output name=version::$(python ci-helpers/showversion.py)

      - name: Commit and Push
        shell: bash
        if: steps.git-check.outputs.modified == 'true'
        env:
          email_address: ${{ secrets.EMAIL_ADDRESS }}
          VERSION: ${{ steps.git-check.outputs.version }}
        run: |
          git config user.name "Naveen M K"
          git config user.email "${email_address}"
          git add .
          git commit -m "Texlive Release ${VERSION}"
          git push
      - name: Push to Chocolatey
        env:
          CHOCO_KEY: ${{ secrets.CHOCO_API_KEY }}
        id: choco-push
        run: |
         cd texlive
         choco pack
         $nupkgFile=$(Resolve-Path *.nupkg)
         echo "::set-output name=nupkg::$($nupkgFile)"
         choco apikey --key $Env:CHOCO_KEY --source https://push.chocolatey.org/
         choco push --source https://push.chocolatey.org/
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
          VERSION: ${{ steps.git-check.outputs.version }}
        with:
          tag_name: v${{ steps.git-check.outputs.version }}
          release_name: Release Tex Live Chocolatey ${{ steps.git-check.outputs.version }}
          body: |
            This is the Scheduled Release of Tex Live Chocolatey Package.
            Here, the `.nupkg` of the installer is uploaded as release asset.
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ${{ steps.choco-push.outputs.nupkg }}
          asset_name: texlive.nupkg
          asset_content_type: application/zip

      
      
      
